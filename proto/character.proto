syntax = "proto2";

import "combat.proto";
import "movement.proto";

package pxd.proto;

/**
 * Data representing an on-going prospection by a character.
 */
message OngoingProspection
{

  /* There are no fields required.  The only piece of data is which region
     is being prospected, but that is implicit from the character's
     position on the map.

     This message is simply used as a flag to indicate that a prospecting
     operation is ongoing in the character's "busy" oneof.  */

}

/**
 * The state of one character in the game.  Note that this does not include
 * data fields that are stored directly in database columns, namely those on
 * which the database keeps indices.
 */
message Character
{

  /** Active movement of the character, if any.  */
  optional Movement movement = 1;

  /** The attacked target (if any).  */
  optional TargetId target = 2;

  /**
   * Static combat data for thie character.  That data is derived from other
   * information (e.g. equipped weapons, current vehicle), but it is cached
   * here for easy computation of combat.  The data here changes only
   * through explicit actions done by the owner.
   */
  optional CombatData combat_data = 3;

  /**
   * If the character is currently busy, then this holds data about the
   * currently ongoing operation.
   */
  oneof busy
  {
    OngoingProspection prospection = 4;
  }

  /** Movement speed of the character.  */
  optional uint32 speed = 5;

  /* Fields that are stored directly in the database and thus not part of the
     encoded protocol buffer:

     - int ID
     - string owner
     - int faction
     - position on the map
     - volatile movement proto (partial step, blocked for counter)
     - current HP proto
     - number of blocks the character is still "busy"
  */

}
